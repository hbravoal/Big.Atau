@model Mastercard.UI.Business.ViewModels.RedemptionViewModel

<div class="container">
    <div class="row justify-content-center pt-4">
        <div class="col-md-5">
            <div class="card py-3 px-4 text-center redemptions">
                <p class="title"><strong>¿Seguro que deseas redimir? </strong></p>
                <p class="m-0"><strong> </strong></p>

                @using (Html.BeginForm("Index", "Redemption",
                    new { ReturnUrl = ViewBag.ReturnUrl },
                    FormMethod.Post, new { @class = "Redim-form" }))
                {
                    @Html.HiddenFor(c => c.CatalogType)
                    @Html.HiddenFor(c => c.Id)
                    @Html.HiddenFor(c => c.Location)
                    @Html.HiddenFor(c => c.AditionalInformation)
                    switch (Model.CatalogType)
                    {
                        case Mastercard.Common.Enums.EnumCatalogNetCommerceType.Digital:

                            <div class="input group">
                                @Html.EditorFor(m => m.Phone, new { @type = "text", required = "required", placeholder = "Celular" })
                                <label for="Phone">Celular</label>
                                @Html.ValidationMessageFor(m => m.Phone, null, new { @class = "error" })
                            </div>
                            <div class="input group">
                                @Html.EditorFor(m => m.Email, new { @type = "email", required = "required", placeholder = "email" })
                                <label for="Email">Email</label>
                                @Html.ValidationMessageFor(m => m.Email, null, new { @class = "error" })
                            </div>
                            <div class="select group">
                                @Html.DropDownListFor(m => m.DepartmentId, ViewBag.Departments as IEnumerable<SelectListItem>,
                                    new { required = "required", Id = "NetDepartmentId" })
                                @Html.ValidationMessageFor(m => m.DepartmentId, null, new { @class = "error" })
                            </div>
                            <div class="select group">
                                @Html.DropDownListFor(m => m.CityId, ViewBag.Cities as IEnumerable<SelectListItem>, new { required = "required", Id = "NetCityId" })
                                @Html.ValidationMessageFor(m => m.CityId, null, new { @class = "error" })
                            </div>
                            <div class="input group">
                                @Html.EditorFor(m => m.Address, new { @type = "text", required = "required", placeholder = "Dirección" })
                                <label for="address">Dirección</label>
                                @Html.ValidationMessageFor(m => m.Address, null, new { @class = "error" })
                            </div>
                            break;

                        case Mastercard.Common.Enums.EnumCatalogNetCommerceType.PCO:
                            <div class="select group">
                                @Html.DropDownListFor(m => m.IdentificationType, ViewBag.IdentificationTypes as IEnumerable<SelectListItem>, new { required = "required" })
                                <select id="document" name="document" hidden>
                                    <option  selected value="-1">Tipo de documento</option>
                                    <option value="1">Cédula </option>
                                </select>
                                @Html.ValidationMessageFor(m => m.IdentificationType, null, new { @class = "error" })
                            </div>
                            <div class="input group">
                                @Html.EditorFor(m => m.Identification, new { @type = "text", required = "required", placeholder = "Documento" })
                                <label for="Identification">Documento</label>
                                @Html.ValidationMessageFor(m => m.Identification, null, new { @class = "error" })
                            </div>
                            <div class="input group">
                                @Html.EditorFor(m => m.Name, new { @type = "text", required = "required", placeholder = "Nombre" })
                                <label for="Name">Nombre</label>
                                @Html.ValidationMessageFor(m => m.Name, null, new { @class = "error" })
                            </div>
                            <div class="input group">
                                @Html.EditorFor(m => m.LastName, new { @type = "text", required = "required", placeholder = "Apellido" })
                                <label for="LastName">Apellido</label>
                                @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "error" })
                            </div>
                            break;
                        case Mastercard.Common.Enums.EnumCatalogNetCommerceType.External:

                            if (Model.Location)
                            {
                                @Html.HiddenFor(c => c.BrandId)

                                <div class="select group">
                                    @Html.DropDownListFor(m => m.DepartmentId, ViewBag.Departments as IEnumerable<SelectListItem>, new { required = "required" })
                                    @Html.ValidationMessageFor(m => m.DepartmentId, null, new { @class = "error" })
                                </div>
                                <div class="select group">
                                    @Html.DropDownListFor(m => m.CityId, ViewBag.Cities as IEnumerable<SelectListItem>, new { required = "required" })
                                    @Html.ValidationMessageFor(m => m.CityId, null, new { @class = "error" })
                                </div>
                                <div class="select group">
                                    @Html.DropDownListFor(m => m.SiteId, ViewBag.Sites as IEnumerable<SelectListItem>, new { required = "required" })
                                    @Html.ValidationMessageFor(m => m.SiteId, null, new { @class = "error" })
                                </div>
                            }
                            if (Model.AditionalInformation)
                            {

                                <div class="input group disabled">
                                    @Html.TextBoxFor(m => m.Name, new { @class = "underline"})
                                    <label for="Name">Nombre</label>
                                    @Html.ValidationMessageFor(m => m.Name, null, new { @class = "error" })
                                </div>
                                <div class="input group disabled">
                                    @Html.TextBoxFor(m => m.Identification, new { @class = "disabled" })
                                    <label for="Identification">Documento</label>
                                    @Html.ValidationMessageFor(m => m.Identification, null, new { @class = "error" })
                                </div>
                                <div class="input group">
                                    @Html.EditorFor(m => m.Phone, new { @type = "text", required = "required"})
                                    <label for="Name">Celular</label>
                                    @Html.ValidationMessageFor(m => m.Phone, null, new { @class = "error" })
                                </div>
                                <div class="input group">
                                    @Html.EditorFor(m => m.Phone, new { @type = "text", required = "required"})
                                    <label for="Name">Confirmar celular</label>
                                    @Html.ValidationMessageFor(m => m.Phone, null, new { @class = "error" })
                                </div>
                            }
                            break;
                        default:
                            break;
                    }

                    <div class="group buttons">

                        <a class="button button-yellow" onclick="document.getElementById('btnSubmit').click();" href="#">Redimir</a>
                        <button id="btnSubmit" type="submit" hidden=""> btn</button>
                        <a class="button button-outline" href="@Url.Action("Index", "Catalog")">Cancelar</a>
                    </div>

                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade modal-categories" id="success_bond" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center">
                <button class="close" type="button"   onclick="window.location.href = '@Url.Action("Index", "Profile")';"   data-dismiss="modal" aria-label="Close"></button>
                <div class="border-image"><img src="~/Content/img/icons/check.svg" alt=""></div>
                <h2 class="title" id="title">¡Ya redimiste tu bono del catálogo!</h2>
                <p class="mb-0" id="message">Disfrútalo con este código:  </p>
                <p class="title" id="code">XXXXX</p>
                <p id="expiration"> <strong>Vigencia: </strong>XX de xxxxxx de XXXX</p>
                <a class="button button-white" id="LinkPdf" href="linkPdf" target="_blank"> <span class="pdf">Descargar PDF</span></a>
                <p>Aún puedes seguir acumulando cupones para participar por el premio especial que más te guste.</p>
                <div class="row justify-content-center">
                    <div class="col-8 col-md-6"><a class="button button-yellow" href="@Url.Action("Index","Profile")">Continuar participando</a></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade modal-categories" id="RedemptionFailed" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="border-image"><img src="/Content/img/icons/alertPhone.svg" alt=""></div>
                <h2 class="title pb-4" id="titulo"></h2>
                <p id="error">  </p>
                <div class="row justify-content-center">
                    <div class="col-8 col-md-6"><a class="button button-outline" type="button" data-dismiss="modal" aria-label="Close">Cerrar</a></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#NetDepartmentId").on('change',function() {
            GetPgCascadingDropDownList("@Url.Action("GetCityPasalaGanandoByDepartmentId", "Master")", this.value, "#NetCityId");
        });

        $("#DepartmentId").on('change',function() {
            GetCascadingDropDownList("@Url.Action("GetCityByDepartmentId","Master")", this.value, $("#BrandId").val(), "#CityId");
        });

        $("#CityId").on('change', function () {
            GetDropDownListSite("@Url.Action("GetSiteByCityId", "Master")", $("#DepartmentId").val(), $("#BrandId").val(), this.value, "#SiteId");
        });

    });
    $('#disabled').prop("readonly", true);
</script>